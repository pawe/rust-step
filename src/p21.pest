// http://www.steptools.com/stds/step/IS_final_p21e3.html


WHITESPACE = _{ " " | "\t" | "\n" | "\r\n" }

underscore = _{ "_" }

// table 1. subsets of the basic alphabet

space = _{ " " }
digit = _{ '0'..'9' }
lower = _{ 'a'..'z' }
upper = _{ 'A'..'Z' }
special = _{ 
       "!" | "\"" | "*" | "$" | "%" | "&" | "." | "#" | 
       "+" | ","  | "-" | "(" | ")" | "?" | "/" | ":" |
       ";" | "<"  | "=" | ">" | "@" | "[" | "]" | "{" |
       "|" | "}"  | "^" | "`" | "~" 
}
reverse_solidus = _{ "\\" }
apastrohpe = _{ "\'" }
latin_codepoint = _{ space | digit | lower | upper | 
    special | reverse_solidus | apastrohpe }

//high_codepoint = 


// not in tables
//comment = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }


// table 2. token definitions

user_defined_keyworkd = { "!" ~ upper ~ (upper | digit | underscore)* }
standard_keyword = { upper ~ (upper | digit | underscore)* }
keyword = { user_defined_keyworkd | standard_keyword }

sign = _{ "+" | "-" }
integer = { sign? ~ digit ~ digit* }
real = { sign? ~ digit ~ digit* ~ "." ~ digit* ~ ("E" ~ sign? ~ digit ~ digit*)? }

string = { "\'" ~ ( special | underscore | digit | space | lower | upper 
    | /* high_codepoint |*/ apastrohpe{2} | reverse_solidus{2} 
    | control_directive )* ~ "\'" }


entity_instance_name = ${ "#" ~ &digit ~ digit* }
value_instance_name = ${ "@" ~ &digit ~ digit* }
constant_entity_name = ${ "#" ~ &upper ~ (upper | digit )* }
constant_value_name = ${ "@" ~ &upper ~ (upper | digit )* }

lhs_occurrence_name = { entity_instance_name | value_instance_name }
rhs_occurrence_name = { entity_instance_name | value_instance_name | constant_entity_name | constant_value_name }

uri_fragment_identifier = @{ !">" ~ ANY }
anchor_name = { "<" ~ uri_fragment_identifier ~ ">" }
tag_name = { (upper | lower) ~ (upper | lower | digit | underscore)* }
universal_resource_identifier = { uri_fragment_identifier }  // not sure what's difference
resource = { "<" ~ universal_resource_identifier ~ ">" }
enumeration = { "." ~ upper ~ (upper | digit | underscore)* ~ "." }

hex = { "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" |
        "8" | "9" | "A" | "B" | "C" | "D" | "E" | "F" 
}
binary = { "\"" ~ ( "0" | "1" | "2" | "3" ) ~ hex* ~ "\"" }

base64 = { '0'..'9' | 'a'..'z' | 'A'..'Z' }
signature_content = { base64 }


// table 3. exchange structure

exchange_file = { 
    "ISO-10303-21;" ~ 
    header_section ~ 
    anchor_section? ~
    reference_section? ~ 
    data_section* ~ 
    "END-ISO-10303-21;" ~ 
    signature_section*
}
  
header_section =  { 
    "HEADER;" ~ 
    header_entity ~ 
    header_entity ~ 
    header_entity ~ 
    header_entity_list? ~ 
    "ENDSEC;" 
}

header_entity_list = { header_entity ~ header_entity* }

header_entity = { keyword ~ "(" ~ parameter_list? ~ ")" ~ ";" }

parameter_list = { parameter ~ ("," ~ parameter)* }
parameter = { typed_parameter | untyped_parameter | omitted_parameter }
typed_parameter = { keyword ~ "(" ~ parameter ~ ")" }
untyped_parameter = { list | "$" | enumeration | real | integer | rhs_occurrence_name | binary | string}
omitted_parameter = { "*" }

list = { "(" ~ (parameter ~ ("," ~ parameter)* )? ~ ")" }


anchor_section = { "ANCHOR;" ~ anchor_list ~ "ENDSEC;" }
anchor_list = { anchor }
anchor  =  { anchor_name ~ "=" ~ anchor_item ~ anchor_tag* ~ ";" }

anchor_item = { "$" | integer | real | string | enumeration | binary
                     | rhs_occurrence_name | resource | anchor_item_list }
anchor_item_list = { "(" ~  ( anchor_item ~ ("," ~ anchor_item)* )? ~ ")" }
anchor_tag =  { "{" ~  tag_name ~ ":" ~ anchor_item ~ "}" }

reference_section = { "REFERENCE;" ~ reference_list ~ "ENDSEC;" }
reference_list = { reference* }
reference = { lhs_occurrence_name ~ "=" ~ resource ~ ";" }

data_section = { "DATA" ~ ("(" ~ parameter_list ~ ")")? ~ ";" ~ entity_instance_list ~ "ENDSEC;" }
entity_instance_list = { entity_instance* }
entity_instance = { simple_entity_instance | complex_entity_instance }
simple_entity_instance = { entity_instance_name ~ "=" ~ simple_record ~ ";" }
complex_entity_instance = { entity_instance_name ~ "=" ~ subsuper_record ~ ";" }
simple_record = { keyword ~ "(" ~ parameter_list? ~ ")" }
subsuper_record = { "(" ~ simple_record_list ~ ")" }
simple_record_list = { simple_record ~ simple_record* }

signature_section  = { "SIGNATURE" ~ signature_content ~ "ENDSEC;" }


// table 4. string control control_directive

control_directive = { page | alphabet | extended2 
                  | extended4 | arbitrary }

page = { reverse_solidus ~ "S" ~ reverse_solidus ~ latin_codepoint }

alphabet = { reverse_solidus ~ "P" ~ upper ~ reverse_solidus }

extended2 = { reverse_solidus ~ "X2" ~ reverse_solidus ~ hex_two ~ hex_two* ~ end_extended }

extended4 = { reverse_solidus ~ "X4" ~ reverse_solidus ~ hex_four ~ hex_four* ~ end_extended }

end_extended = { reverse_solidus ~ "X0" ~ reverse_solidus }

arbitrary = { reverse_solidus ~ "X" ~ reverse_solidus ~ hex_one }

hex_one = {hex ~ hex }

hex_two =  {hex_one ~ hex_one }

hex_four = {hex_two ~ hex_two }